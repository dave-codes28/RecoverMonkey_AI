import dotenv from 'dotenv';
import path from 'path';
import { createClient } from '@supabase/supabase-js';

// Load environment variables
dotenv.config({ path: path.resolve(process.cwd(), '.env.local') });
dotenv.config({ path: path.resolve(process.cwd(), '.env') });

// Verify environment variables
const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;
const supabaseKey = process.env.SUPABASE_SERVICE_ROLE_KEY;

console.log('SUPABASE_URL:', supabaseUrl);
console.log('SUPABASE_SERVICE_ROLE_KEY:', supabaseKey);

if (!supabaseUrl || !supabaseKey) {
  console.error('Missing environment variables. Ensure NEXT_PUBLIC_SUPABASE_URL and SUPABASE_SERVICE_ROLE_KEY are set in .env.local or .env');
  process.exit(1);
}

const supabase = createClient(supabaseUrl, supabaseKey);

async function insertAbandonedCart() {
  try {
    // Test select to verify connection and RLS
    const test = await supabase.from('carts').select('*').limit(1);
    console.log('Test select result:', test);

    console.log('Starting abandoned cart insert...');
    console.log('Script version: with shopify_cart_id and all fields');
    const { data, error } = await supabase.from('carts').insert([
      {
        shop_id: 'd5a79116-842f-4a4b-afd6-a4bb225119cf',
        customer_id: '7d7784d6-b939-4c5f-bc3f-fd207d2d80f1',
        shopify_cart_id: `cart_${Date.now()}`, // Unique placeholder ID
        status: 'abandoned',
        items: [
          { product_id: 'prod-001', name: 'Wireless Headphones', price: 79.99, quantity: 1 },
          { product_id: 'prod-002', name: 'Phone Case', price: 19.99, quantity: 1 },
          { product_id: 'prod-003', name: 'Screen Protector', price: 9.99, quantity: 2 },
        ],
        total_price: 79.99 + 19.99 + 9.99 * 2,
        created_at: new Date().toISOString(),
        updated_at: new Date().toISOString(),
        customer_email: 'example@domain.com', // Optional field for consistency
        customer_name: 'Example Customer', // Optional field for consistency
        // id is auto-generated by Supabase as a uuid
        // abandoned_at and recovered_at can be null or set manually if needed
      },
    ]).select(); // Return the inserted row
    console.log('Insert result:', { data, error });
    if (error) {
      console.error('Error inserting cart:', error);
    } else {
      console.log('Inserted cart:', data);
    }
  } catch (err) {
    console.error('Unexpected error:', err);
  }
}

insertAbandonedCart();